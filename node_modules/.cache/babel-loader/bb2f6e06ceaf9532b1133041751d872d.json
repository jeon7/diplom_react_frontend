{"ast":null,"code":"var _jsxFileName = \"/Users/GK/Documents/WEB/diplom/eco_kitchen/react_frontend/src/containers/note/NoteViewerContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { check } from '../../modules/user';\nimport { readNote, unloadNote } from '../../modules/note';\nimport { setOriginalNote } from '../../modules/write';\nimport NoteViewer from '../../components/note/NoteViewer';\nimport NoteActionButtons from '../../components/note/NoteActionButtons';\nimport { removeNote, addBookmark, removeBookmark } from '../../lib/api/notes';\n\nconst NoteViewerContainer = ({\n  match,\n  history\n}) => {\n  // when first mounted, request read note API \n  const noteId = match.params.noteId;\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    note,\n    loading,\n    user\n  }) => ({\n    note: note.note,\n    error: note.error,\n    loading: loading['note/READ_NOTE'],\n    user: user.user\n  })),\n        note = _useSelector.note,\n        error = _useSelector.error,\n        loading = _useSelector.loading,\n        user = _useSelector.user;\n\n  const onEdit = () => {\n    dispatch(setOriginalNote(note));\n    history.push('/write');\n  };\n\n  const onRemove = async () => {\n    try {\n      await removeNote(noteId);\n      history.push('/'); // link to home\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(readNote(noteId)); // when unmounted, delete note\n\n    return () => {\n      dispatch(unloadNote());\n    };\n  }, [dispatch, noteId]); /////////////////////////////////////////////////////////////////////\n  // for bookmark add remove, todo: make seperate component\n  // check user bookmarks\n\n  useEffect(() => {\n    dispatch(check());\n  }, [dispatch]);\n  let bookmarkedNoteIds = null;\n  let isBookmarked = false;\n\n  if (user !== null) {\n    bookmarkedNoteIds = user.bookmarkedNoteIds;\n  }\n\n  if (bookmarkedNoteIds) {\n    isBookmarked = bookmarkedNoteIds.includes(noteId);\n    ;\n    console.log('isBookmarked: ', isBookmarked);\n  }\n\n  const onBookmarkAdd = async () => {\n    try {\n      await addBookmark(noteId);\n      isBookmarked = true;\n      history.push('/?bookmark=list');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onBookmarkRemove = async () => {\n    try {\n      await removeBookmark(noteId);\n      isBookmarked = false;\n      history.push('/?bookmark=list');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const ownNote = (user && user._id) === (note && note.user._id);\n  console.log('ownNote: ', ownNote);\n  return React.createElement(NoteViewer, {\n    note: note,\n    loading: loading,\n    error: error,\n    actionButtons: ownNote && React.createElement(NoteActionButtons, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }),\n    isBookmarked: isBookmarked,\n    onBookmarkAdd: onBookmarkAdd,\n    onBookmarkRemove: onBookmarkRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(NoteViewerContainer);","map":{"version":3,"sources":["/Users/GK/Documents/WEB/diplom/eco_kitchen/react_frontend/src/containers/note/NoteViewerContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","check","readNote","unloadNote","setOriginalNote","NoteViewer","NoteActionButtons","removeNote","addBookmark","removeBookmark","NoteViewerContainer","match","history","noteId","params","dispatch","note","loading","user","error","onEdit","push","onRemove","e","console","log","bookmarkedNoteIds","isBookmarked","includes","onBookmarkAdd","onBookmarkRemove","ownNote","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { check } from '../../modules/user';\nimport { readNote, unloadNote } from '../../modules/note';\nimport { setOriginalNote } from '../../modules/write';\nimport NoteViewer from '../../components/note/NoteViewer';\nimport NoteActionButtons from '../../components/note/NoteActionButtons';\nimport { removeNote, addBookmark, removeBookmark } from '../../lib/api/notes';\n\nconst NoteViewerContainer = ({ match, history }) => {\n  // when first mounted, request read note API \n  const { noteId } = match.params;\n  const dispatch = useDispatch();\n\n  const { note, error, loading, user } = useSelector(({ note, loading, user }) => ({\n    note: note.note,\n    error: note.error,\n    loading: loading['note/READ_NOTE'],\n    user: user.user\n  }));\n\n\n  const onEdit = () => {\n    dispatch(setOriginalNote(note));\n    history.push('/write');\n  };\n\n  const onRemove = async () => {\n    try {\n      await removeNote(noteId);\n      history.push('/'); // link to home\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(readNote(noteId));\n    // when unmounted, delete note\n    return () => {\n      dispatch(unloadNote());\n    };\n  }, [dispatch, noteId]);\n\n  /////////////////////////////////////////////////////////////////////\n  // for bookmark add remove, todo: make seperate component\n\n  // check user bookmarks\n  useEffect(() => {\n    dispatch(check());\n  }, [dispatch]);\n\n  let bookmarkedNoteIds = null;\n  let isBookmarked = false;\n  if (user !== null) {\n    bookmarkedNoteIds = user.bookmarkedNoteIds;\n  }\n  if (bookmarkedNoteIds) {\n    isBookmarked = bookmarkedNoteIds.includes(noteId);;\n    console.log('isBookmarked: ', isBookmarked);\n  }\n\n  const onBookmarkAdd = async () => {\n    try {\n      await addBookmark(noteId);\n      isBookmarked = true;\n      history.push('/?bookmark=list');\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  const onBookmarkRemove = async () => {\n    try {\n      await removeBookmark(noteId);\n      isBookmarked = false;\n      history.push('/?bookmark=list');\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  const ownNote = (user && user._id) === (note && note.user._id);\n  console.log('ownNote: ', ownNote);\n  return (\n    <NoteViewer\n      note={note}\n      loading={loading}\n      error={error}\n      actionButtons={ownNote && <NoteActionButtons onEdit={onEdit} onRemove={onRemove} />}\n      isBookmarked={isBookmarked}\n      onBookmarkAdd={onBookmarkAdd}\n      onBookmarkRemove={onBookmarkRemove}\n    />\n  );\n};\n\nexport default withRouter(NoteViewerContainer);\n"]},"metadata":{},"sourceType":"module"}