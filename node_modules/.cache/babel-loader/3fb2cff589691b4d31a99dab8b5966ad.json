{"ast":null,"code":"import client from './client';\nimport qs from 'qs';\nexport const writeNote = ({\n  title,\n  standardPortion,\n  ingredients,\n  memo,\n  tags\n}) => client.post('/api/notes', {\n  title,\n  standardPortion,\n  ingredients,\n  memo,\n  tags\n});\nexport const readNote = id => client.get(\"/api/notes/\".concat(id)); // e.g) /api/notes?username=tester&page=2&tag=drinks\n// bookmark list\n\nexport const listNotes = ({\n  page,\n  username,\n  tag,\n  bookmark\n}) => {\n  if (bookmark !== undefined) {\n    const queryStringBookmarkCtrl = qs.stringify({\n      bookmark\n    });\n    console.log(queryStringBookmarkCtrl);\n    return client.patch(\"/api/notes?\".concat(queryStringBookmarkCtrl));\n  } else {\n    const queryStringNoteList = qs.stringify({\n      page,\n      username,\n      tag\n    });\n    return client.get(\"/api/notes?\".concat(queryStringNoteList));\n  }\n};\nexport const updateNote = ({\n  id,\n  title,\n  standardPortion,\n  ingredients,\n  memo,\n  tags\n}) => client.patch(\"api/notes/\".concat(id), {\n  title,\n  standardPortion,\n  ingredients,\n  memo,\n  tags\n});\nexport const removeNote = id => client.delete(\"/api/notes/\".concat(id));\nexport const addBookmark = id => client.patch(\"/api/notes?bookmark=add&id=\".concat(id));\nexport const removeBookmark = id => client.patch(\"/api/notes?bookmark=remove&id=\".concat(id));","map":{"version":3,"sources":["/Users/GK/Documents/WEB/diplom/eco_kitchen/react_frontend/src/lib/api/notes.js"],"names":["client","qs","writeNote","title","standardPortion","ingredients","memo","tags","post","readNote","id","get","listNotes","page","username","tag","bookmark","undefined","queryStringBookmarkCtrl","stringify","console","log","patch","queryStringNoteList","updateNote","removeNote","delete","addBookmark","removeBookmark"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,eAAT;AAA0BC,EAAAA,WAA1B;AAAuCC,EAAAA,IAAvC;AAA6CC,EAAAA;AAA7C,CAAD,KACvBP,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0B;AAAEL,EAAAA,KAAF;AAASC,EAAAA,eAAT;AAA0BC,EAAAA,WAA1B;AAAuCC,EAAAA,IAAvC;AAA6CC,EAAAA;AAA7C,CAA1B,CADK;AAGP,OAAO,MAAME,QAAQ,GAAGC,EAAE,IAAIV,MAAM,CAACW,GAAP,sBAAyBD,EAAzB,EAAvB,C,CAEP;AACA;;AACA,OAAO,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,GAAlB;AAAuBC,EAAAA;AAAvB,CAAD,KAAuC;AAC9D,MAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,UAAMC,uBAAuB,GAAGjB,EAAE,CAACkB,SAAH,CAAa;AAC3CH,MAAAA;AAD2C,KAAb,CAAhC;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,uBAAZ;AACA,WAAOlB,MAAM,CAACsB,KAAP,sBAA2BJ,uBAA3B,EAAP;AAED,GAPD,MAOO;AACL,UAAMK,mBAAmB,GAAGtB,EAAE,CAACkB,SAAH,CAAa;AACvCN,MAAAA,IADuC;AAEvCC,MAAAA,QAFuC;AAGvCC,MAAAA;AAHuC,KAAb,CAA5B;AAKA,WAAOf,MAAM,CAACW,GAAP,sBAAyBY,mBAAzB,EAAP;AACD;AACF,CAhBM;AAkBP,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEd,EAAAA,EAAF;AAAMP,EAAAA,KAAN;AAAaC,EAAAA,eAAb;AAA8BC,EAAAA,WAA9B;AAA2CC,EAAAA,IAA3C;AAAiDC,EAAAA;AAAjD,CAAD,KACxBP,MAAM,CAACsB,KAAP,qBAA0BZ,EAA1B,GAAgC;AAC9BP,EAAAA,KAD8B;AAE9BC,EAAAA,eAF8B;AAG9BC,EAAAA,WAH8B;AAI9BC,EAAAA,IAJ8B;AAK9BC,EAAAA;AAL8B,CAAhC,CADK;AASP,OAAO,MAAMkB,UAAU,GAAGf,EAAE,IAAIV,MAAM,CAAC0B,MAAP,sBAA4BhB,EAA5B,EAAzB;AAEP,OAAO,MAAMiB,WAAW,GAAGjB,EAAE,IAAIV,MAAM,CAACsB,KAAP,sCAA2CZ,EAA3C,EAA1B;AACP,OAAO,MAAMkB,cAAc,GAAGlB,EAAE,IAAIV,MAAM,CAACsB,KAAP,yCAA8CZ,EAA9C,EAA7B","sourcesContent":["import client from './client';\nimport qs from 'qs';\n\nexport const writeNote = ({ title, standardPortion, ingredients, memo, tags }) =>\n  client.post('/api/notes', { title, standardPortion, ingredients, memo, tags });\n\nexport const readNote = id => client.get(`/api/notes/${id}`);\n\n// e.g) /api/notes?username=tester&page=2&tag=drinks\n// bookmark list\nexport const listNotes = ({ page, username, tag, bookmark }) => {\n  if (bookmark !== undefined) {\n    const queryStringBookmarkCtrl = qs.stringify({\n      bookmark\n    });\n    console.log(queryStringBookmarkCtrl);\n    return client.patch(`/api/notes?${queryStringBookmarkCtrl}`);\n\n  } else {\n    const queryStringNoteList = qs.stringify({\n      page,\n      username,\n      tag,\n    });\n    return client.get(`/api/notes?${queryStringNoteList}`);\n  }\n};\n\nexport const updateNote = ({ id, title, standardPortion, ingredients, memo, tags }) =>\n  client.patch(`api/notes/${id}`, {\n    title,\n    standardPortion,\n    ingredients,\n    memo,\n    tags\n  });\n\nexport const removeNote = id => client.delete(`/api/notes/${id}`);\n\nexport const addBookmark = id => client.patch(`/api/notes?bookmark=add&id=${id}`);\nexport const removeBookmark = id => client.patch(`/api/notes?bookmark=remove&id=${id}`);\n\n"]},"metadata":{},"sourceType":"module"}