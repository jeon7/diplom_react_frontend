{"ast":null,"code":"var _jsxFileName = \"/Users/GK/Documents/WEB/velopert/gk/kitchen/react_frontend/src/containers/shopping/ShoppingContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Shopping from '../../components/shopping/Shopping';\nimport { listNotes } from '../../modules/notes';\nimport { list } from '../../../node_modules/postcss/lib/postcss';\n\nconst ShoppingContainer = () => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    notes,\n    loading,\n    user\n  }) => ({\n    notes: notes.notes,\n    error: notes.error,\n    loading: loading['notes/LIST_NOTES'] // user: user.user\n\n  })),\n        notes = _useSelector.notes,\n        error = _useSelector.error,\n        loading = _useSelector.loading,\n        user = _useSelector.user;\n\n  useEffect(() => {\n    const _tag$username$page$bo = {\n      tag: '',\n      username: '',\n      page: '',\n      bookmark: list,\n      id: ''\n    },\n          tag = _tag$username$page$bo.tag,\n          username = _tag$username$page$bo.username,\n          page = _tag$username$page$bo.page,\n          bookmark = _tag$username$page$bo.bookmark,\n          id = _tag$username$page$bo.id;\n    dispatch(listNotes({\n      tag,\n      username,\n      page,\n      bookmark,\n      id\n    }));\n  }, [dispatch]); //todo: excute after loading=(false->true->false), useEffect\n\n  let bookmarkedNotes = notes;\n  console.log('shoppingContainer-bookmarkedNotes: ', bookmarkedNotes);\n  return React.createElement(React.Fragment, null, React.createElement(Shopping, {\n    bookmarkedNotes: bookmarkedNotes,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default ShoppingContainer;","map":{"version":3,"sources":["/Users/GK/Documents/WEB/velopert/gk/kitchen/react_frontend/src/containers/shopping/ShoppingContainer.js"],"names":["React","useEffect","useDispatch","useSelector","Shopping","listNotes","list","ShoppingContainer","dispatch","notes","loading","user","error","tag","username","page","bookmark","id","bookmarkedNotes","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,IAAT,QAAqB,2CAArB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAD8B,uBAEUC,WAAW,CACjD,CAAC;AAAEM,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,MAA+B;AAC7BF,IAAAA,KAAK,EAAEA,KAAK,CAACA,KADgB;AAE7BG,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAFgB;AAG7BF,IAAAA,OAAO,EAAEA,OAAO,CAAC,kBAAD,CAHa,CAI7B;;AAJ6B,GAA/B,CADiD,CAFrB;AAAA,QAEtBD,KAFsB,gBAEtBA,KAFsB;AAAA,QAEfG,KAFe,gBAEfA,KAFe;AAAA,QAERF,OAFQ,gBAERA,OAFQ;AAAA,QAECC,IAFD,gBAECA,IAFD;;AAW9BV,EAAAA,SAAS,CAAC,MAAM;AAAA,kCACgC;AAC5CY,MAAAA,GAAG,EAAE,EADuC;AAE5CC,MAAAA,QAAQ,EAAE,EAFkC;AAG5CC,MAAAA,IAAI,EAAE,EAHsC;AAI5CC,MAAAA,QAAQ,EAAEV,IAJkC;AAK5CW,MAAAA,EAAE,EAAE;AALwC,KADhC;AAAA,UACNJ,GADM,yBACNA,GADM;AAAA,UACDC,QADC,yBACDA,QADC;AAAA,UACSC,IADT,yBACSA,IADT;AAAA,UACeC,QADf,yBACeA,QADf;AAAA,UACyBC,EADzB,yBACyBA,EADzB;AAQdT,IAAAA,QAAQ,CAACH,SAAS,CAAC;AAAEQ,MAAAA,GAAF;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA,IAAjB;AAAuBC,MAAAA,QAAvB;AAAiCC,MAAAA;AAAjC,KAAD,CAAV,CAAR;AACD,GATQ,EASN,CAACT,QAAD,CATM,CAAT,CAX8B,CAsB9B;;AACA,MAAIU,eAAe,GAAGT,KAAtB;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,eAAnD;AACA,SACE,0CACE,oBAAC,QAAD;AAAU,IAAA,eAAe,EAAEA,eAA3B;AAA4C,IAAA,KAAK,EAAEN,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA/BD;;AAiCA,eAAeL,iBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Shopping from '../../components/shopping/Shopping';\nimport { listNotes } from '../../modules/notes';\nimport { list } from '../../../node_modules/postcss/lib/postcss';\n\nconst ShoppingContainer = () => {\n  const dispatch = useDispatch();\n  const { notes, error, loading, user } = useSelector(\n    ({ notes, loading, user }) => ({\n      notes: notes.notes,\n      error: notes.error,\n      loading: loading['notes/LIST_NOTES'],\n      // user: user.user\n    }),\n  );\n\n  useEffect(() => {\n    const { tag, username, page, bookmark, id } = {\n      tag: '',\n      username: '',\n      page: '',\n      bookmark: list,\n      id: ''\n    };\n    dispatch(listNotes({ tag, username, page, bookmark, id }));\n  }, [dispatch]);\n\n  //todo: excute after loading=(false->true->false), useEffect\n  let bookmarkedNotes = notes;\n\n  console.log('shoppingContainer-bookmarkedNotes: ', bookmarkedNotes);\n  return (\n    <>\n      <Shopping bookmarkedNotes={bookmarkedNotes} error={error} />\n    </>\n  );\n};\n\nexport default ShoppingContainer;\n"]},"metadata":{},"sourceType":"module"}