{"ast":null,"code":"var _jsxFileName = \"/Users/GK/Documents/WEB/diplom/eco_kitchen/react_frontend/src/containers/write/WriteActionButtonsContainer.js\";\nimport React, { useEffect } from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writeNote, updateNote } from '../../modules/write';\n\nconst WriteActionButtonsContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    write\n  }) => ({\n    title: write.title,\n    standardPortion: write.standardPortion,\n    ingredients: write.ingredients,\n    memo: write.memo,\n    tags: write.tags,\n    note: write.note,\n    noteError: write.noteError,\n    originalNoteId: write.originalNoteId\n  })),\n        title = _useSelector.title,\n        standardPortion = _useSelector.standardPortion,\n        ingredients = _useSelector.ingredients,\n        memo = _useSelector.memo,\n        tags = _useSelector.tags,\n        note = _useSelector.note,\n        noteError = _useSelector.noteError,\n        originalNoteId = _useSelector.originalNoteId; // 포스트 등록\n\n\n  const onPublish = () => {\n    if (originalNoteId) {\n      dispatch(updateNote({\n        title,\n        standardPortion,\n        ingredients,\n        memo,\n        tags,\n        id: originalNoteId\n      }));\n      return;\n    }\n\n    dispatch(writeNote({\n      title,\n      standardPortion,\n      ingredients,\n      memo,\n      tags\n    }));\n  }; // 취소\n\n\n  const onCancel = () => {\n    history.goBack();\n  }; // 성공 혹은 실패시 할 작업\n\n\n  useEffect(() => {\n    if (note) {\n      const _id = note._id,\n            user = note.user;\n      history.push(\"/@\".concat(user.username, \"/\").concat(_id));\n    }\n\n    if (noteError) {\n      console.log(noteError);\n    }\n  }, [history, note, noteError]);\n  return React.createElement(WriteActionButtons, {\n    onPublish: onPublish,\n    onCancel: onCancel,\n    isEdit: !!originalNoteId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(WriteActionButtonsContainer);","map":{"version":3,"sources":["/Users/GK/Documents/WEB/diplom/eco_kitchen/react_frontend/src/containers/write/WriteActionButtonsContainer.js"],"names":["React","useEffect","WriteActionButtons","useSelector","useDispatch","withRouter","writeNote","updateNote","WriteActionButtonsContainer","history","dispatch","write","title","standardPortion","ingredients","memo","tags","note","noteError","originalNoteId","onPublish","id","onCancel","goBack","_id","user","push","username","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,qBAAtC;;AAEA,MAAMC,2BAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACnD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADmD,uBAGjDD,WAAW,CAAC,CAAC;AAAEQ,IAAAA;AAAF,GAAD,MAAgB;AAC1BC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADa;AAE1BC,IAAAA,eAAe,EAAEF,KAAK,CAACE,eAFG;AAG1BC,IAAAA,WAAW,EAAEH,KAAK,CAACG,WAHO;AAI1BC,IAAAA,IAAI,EAAEJ,KAAK,CAACI,IAJc;AAK1BC,IAAAA,IAAI,EAAEL,KAAK,CAACK,IALc;AAM1BC,IAAAA,IAAI,EAAEN,KAAK,CAACM,IANc;AAO1BC,IAAAA,SAAS,EAAEP,KAAK,CAACO,SAPS;AAQ1BC,IAAAA,cAAc,EAAER,KAAK,CAACQ;AARI,GAAhB,CAAD,CAHsC;AAAA,QAE3CP,KAF2C,gBAE3CA,KAF2C;AAAA,QAEpCC,eAFoC,gBAEpCA,eAFoC;AAAA,QAEnBC,WAFmB,gBAEnBA,WAFmB;AAAA,QAENC,IAFM,gBAENA,IAFM;AAAA,QAEAC,IAFA,gBAEAA,IAFA;AAAA,QAEMC,IAFN,gBAEMA,IAFN;AAAA,QAEYC,SAFZ,gBAEYA,SAFZ;AAAA,QAEuBC,cAFvB,gBAEuBA,cAFvB,EAcnD;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAID,cAAJ,EAAoB;AAClBT,MAAAA,QAAQ,CACNH,UAAU,CAAC;AACTK,QAAAA,KADS;AAETC,QAAAA,eAFS;AAGTC,QAAAA,WAHS;AAITC,QAAAA,IAJS;AAKTC,QAAAA,IALS;AAMTK,QAAAA,EAAE,EAAEF;AANK,OAAD,CADJ,CAAR;AASA;AACD;;AACDT,IAAAA,QAAQ,CACNJ,SAAS,CAAC;AACRM,MAAAA,KADQ;AAERC,MAAAA,eAFQ;AAGRC,MAAAA,WAHQ;AAIRC,MAAAA,IAJQ;AAKRC,MAAAA;AALQ,KAAD,CADH,CAAR;AAQD,GArBD,CAfmD,CAsCnD;;;AACA,QAAMM,QAAQ,GAAG,MAAM;AACrBb,IAAAA,OAAO,CAACc,MAAR;AACD,GAFD,CAvCmD,CA2CnD;;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,IAAJ,EAAU;AAAA,YACAO,GADA,GACcP,IADd,CACAO,GADA;AAAA,YACKC,IADL,GACcR,IADd,CACKQ,IADL;AAERhB,MAAAA,OAAO,CAACiB,IAAR,aAAkBD,IAAI,CAACE,QAAvB,cAAmCH,GAAnC;AACD;;AACD,QAAIN,SAAJ,EAAe;AACbU,MAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACD;AACF,GARQ,EAQN,CAACT,OAAD,EAAUQ,IAAV,EAAgBC,SAAhB,CARM,CAAT;AASA,SAAO,oBAAC,kBAAD;AACL,IAAA,SAAS,EAAEE,SADN;AAEL,IAAA,QAAQ,EAAEE,QAFL;AAGL,IAAA,MAAM,EAAE,CAAC,CAACH,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAID,CAzDD;;AA2DA,eAAed,UAAU,CAACG,2BAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writeNote, updateNote } from '../../modules/write';\n\nconst WriteActionButtonsContainer = ({ history }) => {\n  const dispatch = useDispatch();\n  const { title, standardPortion, ingredients, memo, tags, note, noteError, originalNoteId } =\n    useSelector(({ write }) => ({\n      title: write.title,\n      standardPortion: write.standardPortion,\n      ingredients: write.ingredients,\n      memo: write.memo,\n      tags: write.tags,\n      note: write.note,\n      noteError: write.noteError,\n      originalNoteId: write.originalNoteId\n    }));\n\n  // 포스트 등록\n  const onPublish = () => {\n    if (originalNoteId) {\n      dispatch(\n        updateNote({\n          title,\n          standardPortion,\n          ingredients,\n          memo,\n          tags,\n          id: originalNoteId\n        }));\n      return;\n    }\n    dispatch(\n      writeNote({\n        title,\n        standardPortion,\n        ingredients,\n        memo,\n        tags,\n      }))\n  };\n\n  // 취소\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  // 성공 혹은 실패시 할 작업\n  useEffect(() => {\n    if (note) {\n      const { _id, user } = note;\n      history.push(`/@${user.username}/${_id}`);\n    }\n    if (noteError) {\n      console.log(noteError);\n    }\n  }, [history, note, noteError]);\n  return <WriteActionButtons\n    onPublish={onPublish}\n    onCancel={onCancel}\n    isEdit={!!originalNoteId} />;\n};\n\nexport default withRouter(WriteActionButtonsContainer);\n"]},"metadata":{},"sourceType":"module"}