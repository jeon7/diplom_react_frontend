{"ast":null,"code":"import _slicedToArray from \"/Users/GK/Documents/WEB/diplom/eco_kitchen/react_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/GK/Documents/WEB/diplom/eco_kitchen/react_frontend/src/containers/auth/RegisterForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst RegisterForm = ({\n  history\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.register,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  })),\n        form = _useSelector.form,\n        auth = _useSelector.auth,\n        authError = _useSelector.authError,\n        user = _useSelector.user; // while typing (input changes)\n\n\n  const onChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    dispatch(changeField({\n      form: 'register',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = form.username,\n          password = form.password,\n          passwordConfirm = form.passwordConfirm; // check user input\n\n    if ([username, password, passwordConfirm].includes('')) {\n      setError('Complete the Form');\n      return;\n    }\n\n    if (password !== passwordConfirm) {\n      setError('Password does not match');\n      dispatch(changeField({\n        form: 'register',\n        key: 'password',\n        value: ''\n      }));\n      dispatch(changeField({\n        form: 'register',\n        key: 'passwordConfirm',\n        value: ''\n      }));\n      return;\n    }\n\n    dispatch(register({\n      username,\n      password\n    }));\n  }; // form is initialized when the component first rendered\n\n\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]); // register sucess or fail\n\n  useEffect(() => {\n    if (authError) {\n      // the account already exists\n      if (authError.response.status === 409) {\n        setError('This account already exists');\n        return;\n      } // other reason\n\n\n      setError('register fail');\n      return;\n    }\n\n    if (auth) {\n      console.log('register success');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      history.push('/'); // go to homepage\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n  return React.createElement(AuthForm, {\n    type: \"register\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(RegisterForm);","map":{"version":3,"sources":["/Users/GK/Documents/WEB/diplom/eco_kitchen/react_frontend/src/containers/auth/RegisterForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","changeField","initializeForm","register","AuthForm","check","withRouter","RegisterForm","history","error","setError","dispatch","auth","user","form","authError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","password","passwordConfirm","includes","response","status","console","log","push","localStorage","setItem","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,QAAtC,QAAsD,oBAAtD;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,oBACVV,QAAQ,CAAC,IAAD,CADE;AAAA;AAAA,QAC7BW,KAD6B;AAAA,QACtBC,QADsB;;AAEpC,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAFoC,uBAGIC,WAAW,CAAC,CAAC;AAAEY,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,MAAqB;AACvEC,IAAAA,IAAI,EAAEF,IAAI,CAACT,QAD4D;AAEvES,IAAAA,IAAI,EAAEA,IAAI,CAACA,IAF4D;AAGvEG,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHuD;AAIvEF,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJ4D,GAArB,CAAD,CAHf;AAAA,QAG5BC,IAH4B,gBAG5BA,IAH4B;AAAA,QAGtBF,IAHsB,gBAGtBA,IAHsB;AAAA,QAGhBG,SAHgB,gBAGhBA,SAHgB;AAAA,QAGLF,IAHK,gBAGLA,IAHK,EASpC;;;AACA,QAAMG,QAAQ,GAAGC,CAAC,IAAI;AAAA,sBACIA,CAAC,CAACC,MADN;AAAA,UACZC,KADY,aACZA,KADY;AAAA,UACLC,IADK,aACLA,IADK;AAEpBT,IAAAA,QAAQ,CACNV,WAAW,CAAC;AACVa,MAAAA,IAAI,EAAE,UADI;AAEVO,MAAAA,GAAG,EAAED,IAFK;AAGVD,MAAAA;AAHU,KAAD,CADL,CAAR;AAOD,GATD;;AAWA,QAAMG,QAAQ,GAAGL,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACM,cAAF;AADoB,UAEZC,QAFY,GAE4BV,IAF5B,CAEZU,QAFY;AAAA,UAEFC,QAFE,GAE4BX,IAF5B,CAEFW,QAFE;AAAA,UAEQC,eAFR,GAE4BZ,IAF5B,CAEQY,eAFR,EAGpB;;AACA,QAAI,CAACF,QAAD,EAAWC,QAAX,EAAqBC,eAArB,EAAsCC,QAAtC,CAA+C,EAA/C,CAAJ,EAAwD;AACtDjB,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACA;AACD;;AACD,QAAIe,QAAQ,KAAKC,eAAjB,EAAkC;AAChChB,MAAAA,QAAQ,CAAC,yBAAD,CAAR;AACAC,MAAAA,QAAQ,CAACV,WAAW,CAAC;AAAEa,QAAAA,IAAI,EAAE,UAAR;AAAoBO,QAAAA,GAAG,EAAE,UAAzB;AAAqCF,QAAAA,KAAK,EAAE;AAA5C,OAAD,CAAZ,CAAR;AACAR,MAAAA,QAAQ,CACNV,WAAW,CAAC;AAAEa,QAAAA,IAAI,EAAE,UAAR;AAAoBO,QAAAA,GAAG,EAAE,iBAAzB;AAA4CF,QAAAA,KAAK,EAAE;AAAnD,OAAD,CADL,CAAR;AAGA;AACD;;AACDR,IAAAA,QAAQ,CAACR,QAAQ,CAAC;AAAEqB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAT,CAAR;AACD,GAjBD,CArBoC,CAwCpC;;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACT,cAAc,CAAC,UAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACS,QAAD,CAFM,CAAT,CAzCoC,CA6CpC;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,SAAJ,EAAe;AACb;AACA,UAAIA,SAAS,CAACa,QAAV,CAAmBC,MAAnB,KAA8B,GAAlC,EAAuC;AACrCnB,QAAAA,QAAQ,CAAC,6BAAD,CAAR;AACA;AACD,OALY,CAMb;;;AACAA,MAAAA,QAAQ,CAAC,eAAD,CAAR;AACA;AACD;;AAED,QAAIE,IAAJ,EAAU;AACRkB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACAD,MAAAA,QAAQ,CAACN,KAAK,EAAN,CAAR;AACD;AACF,GAjBQ,EAiBN,CAACO,IAAD,EAAOG,SAAP,EAAkBJ,QAAlB,CAjBM,CAAT;AAmBAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,IAAJ,EAAU;AACRL,MAAAA,OAAO,CAACwB,IAAR,CAAa,GAAb,EADQ,CACW;;AACnB,UAAI;AACFC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAevB,IAAf,CAA7B;AACD,OAFD,CAEE,OAAOI,CAAP,EAAU;AACVa,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;AACF,GATQ,EASN,CAACvB,OAAD,EAAUK,IAAV,CATM,CAAT;AAWA,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,QAAQ,EAAEM,QAJZ;AAKE,IAAA,KAAK,EAAEb,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CArFD;;AAuFA,eAAeH,UAAU,CAACC,YAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst RegisterForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.register,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n  // while typing (input changes)\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'register',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, password, passwordConfirm } = form;\n    // check user input\n    if ([username, password, passwordConfirm].includes('')) {\n      setError('Complete the Form');\n      return;\n    }\n    if (password !== passwordConfirm) {\n      setError('Password does not match');\n      dispatch(changeField({ form: 'register', key: 'password', value: '' }));\n      dispatch(\n        changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\n      );\n      return;\n    }\n    dispatch(register({ username, password }));\n  };\n\n  // form is initialized when the component first rendered\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]);\n\n  // register sucess or fail\n  useEffect(() => {\n    if (authError) {\n      // the account already exists\n      if (authError.response.status === 409) {\n        setError('This account already exists');\n        return;\n      }\n      // other reason\n      setError('register fail');\n      return;\n    }\n\n    if (auth) {\n      console.log('register success');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/'); // go to homepage\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"register\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}